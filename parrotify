#!/bin/bash

# help with helping
function about() {
    echo "Parrotify"
    echo
    echo "  Make a slack parrot based on an image."
    echo
    echo "Usage"
    echo
    echo "  ${0} [input] [output] [parrot] [zoom]"
    echo
    echo "  input  … input image to be transformed to the top of the parrot."
    echo "  output … the gif to be created."
    echo "  parrot … the base parrot.gif to be used."
    echo "  zoom   … the zoom to be used (usefull for different parrots)."
    echo
}

for a in $@; do
    if [ "${a}" = "-h" ]; then
        about
        exit
    fi
done

input=$1
if [ -z "$1" ]; then
	input=/var/lib/AccountsService/icons/$USER
fi;
shift

output=$1
if [ -z "$1" ]; then
	output=/tmp/parrot-$(basename $input).gif
fi;
shift

parrot=$1
if [ -z "$1" ]; then
	parrot=$BASH_TOOLS_HOME/parrot.gif
fi;
shift

zoom=$1
if [ -z "$1" ]; then
	zoom=4.7
fi;
shift

delay=$1
if [ -z "$1" ]; then
	delay=3
fi;
shift

# short hand for scaling all the values
function z() {
	echo "${zoom} * ${1}" | bc -l
}

if [ -n "$DEBUG" ]; then
    echo input: ${input}
    echo output: ${output}
    echo parrot: ${parrot}
    echo zoom: ${zoom}
    echo delay: ${delay}
fi

geometries[0]="$(z 20)x$(z 20)+$(z 0)+$(z 0)"
geometries[1]="$(z 20)x$(z 20)-$(z 2)-$(z 2)"
geometries[2]="$(z 20)x$(z 20)-$(z 6)-$(z 1)"
geometries[3]="$(z 20)x$(z 20)-$(z 9)+$(z 1)"
geometries[4]="$(z 20)x$(z 20)-$(z 9)+$(z 2)"
geometries[5]="$(z 20)x$(z 20)-$(z 8)+$(z 3)"
geometries[6]="$(z 20)x$(z 20)-$(z 3)+$(z 4)"
geometries[7]="$(z 20)x$(z 20)-$(z 0)+$(z 4)"
geometries[8]="$(z 20)x$(z 20)+$(z 1)+$(z 3)"
geometries[9]="$(z 20)x$(z 20)+$(z 2)+$(z 2)"

if [ -n "$DEBUG" ]; then
    echo geometries: ${geometries[@]};
    echo
fi

command="convert +antialias"
if [ -n "$DEBUG" ]; then
    command="${command} -monitor"
fi

for i in $(seq 0 9); do
    frame="$(printf "/tmp/frame_%05d.gif" ${i})"
    frame_command="convert ${parrot}[$i] $input -geometry ${geometries[i]} -composite ${frame}"
    if [ -n "$DEBUG" ]; then
        echo frame: ${frame_command}
    fi

    ${frame_command}

    command="${command} -dispose Previous -delay ${delay} ${frame}"
done

command="${command} -loop 0 ${output}"

if [ -n "$DEBUG" ]; then
    echo
    echo command: ${command}
fi

${command} | cat -

rm /tmp/frame_*gif
