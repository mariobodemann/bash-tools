
function git_guys() {
	files="$(git status | grep 'modified:' | cut -d':' -f2 | grep -o '[^ ]*')"
	git_blamer $files;
}

function git_blamer() {
	files=$@
	if [ "$(echo $files | wc -c)" -le "1" ]; then
		echo "No changes detected"
		return
	fi

	authors=''
	for file in $files; do
		authors="$authors $(git blame $file | cut -d'(' -f2 | cut -d')' -f1 | cut -d'2' -f1 | sed 's/\ \{2,\}//g' | sed 's/\ /#/g')"
	done

	echo $authors | tr ' ' '\n' | grep -v "Not#Committed#Yet" | sort | uniq -c | sort -rn | sed 's/#/\ /g'
}

function is_git() {
        if git status -s 2>&1 | grep -qo 'Not a git repository'; then
                echo 0;      
        else 
                echo 1;   
        fi
}

function git_prompt_current_branch() {
	git branch | grep \* | cut -d' ' -f2-
}

function git_prompt_changes() {
	changes=$(git status -s | grep -o "^.." | sed 's/ //g' | grep -o '^.' |  sort | uniq -c | sed s/\ //g | tr "
" "-" | tr A-Z a-z | sed s/-//g)
	if [ -z "$changes" ]; then
		echo '';
	else
		echo "($changes)"
	fi
}

function git_escape() {
	echo "\[$(rgb $1 $2 $3)\]$4\[$(bgr)\]"
}

function git_prompt() {
        if [ $(is_git) -eq 1 ]; then 
		GIT_PS1="$(rainbow -esc -- "@$(git_prompt_current_branch)$(git_prompt_changes)")";
	else 
		GIT_PS1='';
	fi

	export PS1="[\
$(git_escape 1 .2 .2 \\u)\
@\
$(git_escape 0 .75 0 \\h) \
$(git_escape .3 .3 .85 \\W)\
${GIT_PS1}\
]\$ "
}

export PROMPT_COMMAND=git_prompt

