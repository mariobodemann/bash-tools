function cp_intro() {
	if command -v chafa > /dev/null; then
		chafa https://circuitpython.org/assets/images/logo.png
	elif command -v display > /dev/null; then
		display https://circuitpython.org/assets/images/logo.png
	elif command -v toilet > /dev/null; then
		toilet 'circuit python upgradder'
	else
		echo 'circuit python upgradder'
	fi
}

function cp_logo() {
	ID=$1
	ID=${ID:="raspberry_pi_pico"}
	shift

	if command -v chafa > /dev/null; then
		chafa --size=64x https://circuitpython.org/assets/images/boards/small/${ID}.jpg
	elif command -v display > /dev/null; then
		display https://circuitpython.org/assets/images/boards/small/${ID}.jpg
	fi
}

function cp_select() {
	OPTIONS=$@
	ID=0
	for OPTION in $(echo $OPTIONS | tr ' ' '\n'); do
		echo $ID: $OPTION > /dev/stderr
		((ID++))
	done

	echo -en 'Which option do you want? ' > /dev/stderr
	read NUMBER
		
	echo $OPTIONS | tr ' ' '\n' | head -$((NUMBER +1)) | head -1
}

function upgrade_circuit_python() {
	cp_intro

	local MCU=$1
	if [ -z "$MCU" ]; then
		echo -n 'What MCU do you want to upgrade? '
		read MCU
	fi
	
	local OPTIONS=$(curl -s https://circuitpython.org/downloads | grep -i '/board/' | cut -d'"' -f2 | cut -d'/' -f3 | sort)

	local FILTERED="$(echo $OPTIONS | tr ' ' '\n' | grep -i $MCU)"
	if [ "$(echo "$FILTERED" | tr ' ' '\n' | wc -l)" -gt "1" ]; then
		FILTERED=$(cp_select $FILTERED)
	fi

	if [ -z "$FILTERED" ]; then
		echo -e "\e[41mError: Could not find '$FILTERED'.\e[m"
		return
	fi

	echo -e "\n\nSelected: '$FILTERED'."
	cp_logo $FILTERED
	echo

	local DOWNLOAD="$(cp_select "$(curl --silent "https://circuitpython.org/board/$FILTERED/" | grep uf2 | grep pirate | grep data-files | cut -d'=' -f2)")"
	wget --quiet "$DOWNLOAD"

	echo -e "\nPlease copy '$(basename $DOWNLOAD)' to the mounted and in bootloader mode."
}
